package com.cx.doorplate.activity;import android.app.Activity;import android.app.AlertDialog;import android.app.ProgressDialog;import android.content.ActivityNotFoundException;import android.content.BroadcastReceiver;import android.content.Context;import android.content.DialogInterface;import android.content.DialogInterface.OnDismissListener;import android.content.Intent;import android.content.IntentFilter;import android.graphics.Bitmap;import android.graphics.Color;import android.net.Uri;import android.os.Bundle;import android.os.Handler;import android.os.IBinder;import android.os.Message;import android.support.v4.content.LocalBroadcastManager;import android.text.TextUtils;import android.util.Log;import android.view.Gravity;import android.view.KeyEvent;import android.view.LayoutInflater;import android.view.MotionEvent;import android.view.View;import android.view.View.OnClickListener;import android.view.ViewGroup;import android.view.WindowManager;import android.view.inputmethod.InputMethodManager;import android.webkit.WebSettings;import android.webkit.WebView;import android.widget.BaseAdapter;import android.widget.Button;import android.widget.CheckBox;import android.widget.EditText;import android.widget.GridView;import android.widget.HorizontalScrollView;import android.widget.ImageView;import android.widget.LinearLayout;import android.widget.RadioButton;import android.widget.RadioGroup;import android.widget.RelativeLayout;import android.widget.ScrollView;import android.widget.TextClock;import android.widget.TextView;import android.widget.Toast;import com.alibaba.fastjson.JSONArray;import com.github.mikephil.charting.charts.PieChart;import com.github.mikephil.charting.components.Legend;import com.github.mikephil.charting.data.Entry;import com.github.mikephil.charting.data.PieData;import com.github.mikephil.charting.data.PieDataSet;import com.github.mikephil.charting.formatter.PercentFormatter;import com.github.mikephil.charting.highlight.Highlight;import com.github.mikephil.charting.listener.OnChartValueSelectedListener;import com.github.mikephil.charting.utils.ColorTemplate;import com.yy.doorplate.MyApplication;import com.yy.doorplate.R;import com.yy.doorplate.adapter.StudentCXXKAdapter;import com.yy.doorplate.adapter.StudentNewCXXKAdapter;import com.yy.doorplate.adapter.StudentXKXXAdapter;import com.yy.doorplate.communication.FTPManager;import com.yy.doorplate.communication.HttpProcess;import com.yy.doorplate.communication.HttpUtils;import com.yy.doorplate.database.AttendInfoDatabase;import com.yy.doorplate.database.CoursewareDatabase;import com.yy.doorplate.database.CurriculumInfoDatabase;import com.yy.doorplate.database.TeacherInfoDatabase;import com.yy.doorplate.model.AnswerModel;import com.yy.doorplate.model.AttendInfoModel;import com.yy.doorplate.model.CoursewareModel;import com.yy.doorplate.model.CurriculumInfoModel;import com.yy.doorplate.model.OptionModel;import com.yy.doorplate.model.QuestionModel;import com.yy.doorplate.model.QuestionNaireModel;import com.yy.doorplate.model.StudentInfoModel;import com.yy.doorplate.model.TeacherInfoModel;import com.yy.doorplate.tool.ImageLoader;import com.yy.doorplate.tool.ImageLoader.OnImageLoaderListener;import org.json.JSONException;import org.json.JSONObject;import java.io.File;import java.util.ArrayList;import java.util.List;public class CXXKStudentActivity extends Activity implements OnClickListener{	private final String TAG = "CXAttendActivity";	private MyApplication application;	private ImageLoader imageLoader;	private RelativeLayout ly_attend;	private Button btn_cx_back;	private TextView txt_weather;	private WebView webView;	private TextClock textClock;	private TextView tv_title_one,tv_one,tv_two,tv_three,tv_four,tv_five,tv_six;	private GridView gv_one,gv_two,gv_three,gv_four,gv_five,gv_six;	private HorizontalScrollView sv_classfeedback;	private ProgressDialog progressDialog = null;	private HttpUtils httpUtils;	private final String QRY_STUDENTINFOLIST="qryStudentInfoList";	private List<StudentInfoModel> studentInfoModelList;	private List<StudentInfoModel> studentInfoModelList_one;	private List<StudentInfoModel> studentInfoModelList_two;	private List<StudentInfoModel> studentInfoModelList_three,studentInfoModelList_four,studentInfoModelList_five,studentInfoModelList_six;	private List<List<StudentInfoModel>> allStudentList;	private List<String> nameList;	String name="";	//0历史，1物理	private int type=0;	@Override	protected void onCreate(Bundle savedInstanceState) {		super.onCreate(savedInstanceState);		setContentView(R.layout.cx_activity_cxxk);		getWindow().addFlags(WindowManager.LayoutParams.FLAG_KEEP_SCREEN_ON);		application = (MyApplication) getApplicationContext();		httpUtils = new HttpUtils(application);		imageLoader = new ImageLoader(application);		allStudentList=new ArrayList<>();		IntentFilter filter = new IntentFilter();		filter.addAction(MyApplication.BROADCAST);		initView();	}	private void initView() {		nameList=new ArrayList<>();		nameList.add("物化地");		nameList.add("物生地");		nameList.add("物化政");		nameList.add("物化生");		nameList.add("物地政");		nameList.add("物生政");		studentInfoModelList_one=new ArrayList<>();		studentInfoModelList_two=new ArrayList<>();		studentInfoModelList_three=new ArrayList<>();		studentInfoModelList_four=new ArrayList<>();		studentInfoModelList_five=new ArrayList<>();		studentInfoModelList_six=new ArrayList<>();		ly_attend = (RelativeLayout) findViewById(R.id.ly_attend);		sv_classfeedback = (HorizontalScrollView) findViewById(R.id.sv_classfeedback);		btn_cx_back = (Button) findViewById(R.id.btn_cx_back);		txt_weather = (TextView) findViewById(R.id.txt_weather);		webView = (WebView) findViewById(R.id.webView);		gv_one = (GridView) findViewById(R.id.gv_one);		gv_two= (GridView) findViewById(R.id.gv_two);		gv_three= (GridView) findViewById(R.id.gv_three);		gv_four= (GridView) findViewById(R.id.gv_four);		gv_five= (GridView) findViewById(R.id.gv_five);		gv_six= (GridView) findViewById(R.id.gv_six);		textClock = (TextClock) findViewById(R.id.textClock);		tv_title_one= (TextClock) findViewById(R.id.textClock);		tv_one= (TextView) findViewById(R.id.tv_one);		tv_two= (TextView) findViewById(R.id.tv_two);		tv_three= (TextView) findViewById(R.id.tv_three);		tv_four= (TextView) findViewById(R.id.tv_four);		tv_five= (TextView) findViewById(R.id.tv_five);		tv_six= (TextView) findViewById(R.id.tv_six);		textClock.setFormat12Hour(null);		textClock.setFormat24Hour("yyyy年MM月dd日\nEEEE      HH : mm");		txt_weather.setText(application.currentCity.trim() + "   " + application.temperature.trim() + "\n"				+ application.weather.trim());		btn_cx_back.setOnClickListener(this);		getStudentInfo();//		showProgressDialog();	}	// 查询学生选课信息	public void QryStudentbykc(String jssysdm) {		application.executoService.execute(new Runnable() {			@Override			public void run() {				if (application.checkNetworkHw()) {					String result = httpUtils.post(QRY_STUDENTINFOLIST, httpUtils.getJsonStudentInfoList(jssysdm));					Log.e("message","message:"+result);					if (!TextUtils.isEmpty(result)) {						try {							String code = new JSONObject(result).getString("code");							String message = new JSONObject(result).getString("message");							if (!code.equals("0000")) {								return;							}else{								JSONObject data = new JSONObject(result).getJSONObject("data");								JSONObject error = data.getJSONObject("error");								String error_id = error.getString("id");								String error_message = error.getString("message");								if (!error_id.equals("0000") && !error_id.equals("9001")) {									return;								}								if(data.getString("studentList").length()<=2){								}								try {									String studentList = data.getString("studentList");									studentInfoModelList = JSONArray.parseArray(studentList, StudentInfoModel.class);									Log.e("message","message:"+studentInfoModelList);									if (studentInfoModelList != null && studentInfoModelList.size() > 0) {										handler.sendEmptyMessage(200);									}else{										handler.sendEmptyMessage(520);									}								} catch (Exception e) {									e.printStackTrace();								}							}						} catch (JSONException e) {						}					} else {					}				} else {				}			}		});	}	private void getStudentInfo() {		Log.e("getStudentInfo","getStudentInfo:"+application.equInfoModel.jssysdm+"   "+application.equInfoModel.orgId);		QryStudentbykc(application.equInfoModel.jssysdm);	}	@Override	public void onClick(View v) {		switch (v.getId()) {			case R.id.btn_cx_back:				finish();				break;		}	}	private Handler handler = new Handler() {		public void handleMessage(Message msg) {			switch (msg.what) {				case -1:					application.showToast("加载失败");					break;				case 0:					showProgressDialog();					break;				case 1:					closeProgressDialog();					break;				case 2:					application.createFloating();					break;				case 200:{					for(int i=0;i<studentInfoModelList.size();i++){						name="";						for(int j=0;j<studentInfoModelList.get(i).kcxxInfoList.size();j++){							name=name+studentInfoModelList.get(i).kcxxInfoList.get(j).kcmc;						}						if(name.indexOf("历史")!=-1){							type=0;							tv_title_one.setText("选择历史");							tv_one.setText("历化政");							tv_two.setText("历化生");							tv_three.setText("历生政");							tv_four.setText("历化地");							tv_five.setText("历地政");							tv_six.setText("历生地");							if(name.indexOf("历史")!=-1&&name.indexOf("化学")!=-1&&name.indexOf("政治")!=-1){								studentInfoModelList_one.add(studentInfoModelList.get(i));							}							if(name.indexOf("历史")!=-1&&name.indexOf("化学")!=-1&&name.indexOf("生物")!=-1){								Log.e("学生","name：you"+name);								studentInfoModelList_two.add(studentInfoModelList.get(i));							}							if(name.indexOf("历史")!=-1&&name.indexOf("生物")!=-1&&name.indexOf("政治")!=-1){								studentInfoModelList_three.add(studentInfoModelList.get(i));							}							if(name.indexOf("历史")!=-1&&name.indexOf("化学")!=-1&&name.indexOf("地理")!=-1){								studentInfoModelList_four.add(studentInfoModelList.get(i));							}							if(name.indexOf("历史")!=-1&&name.indexOf("地理")!=-1&&name.indexOf("政治")!=-1){								studentInfoModelList_five.add(studentInfoModelList.get(i));							}							if(name.indexOf("历史")!=-1&&name.indexOf("生物")!=-1&&name.indexOf("地理")!=-1){								studentInfoModelList_six.add(studentInfoModelList.get(i));							}						}else{							tv_title_one.setText("选择物理");							type=1;							tv_one.setText("物化地");							tv_two.setText("物生地");							tv_three.setText("物化政");							tv_four.setText("物化生");							tv_five.setText("物地政");							tv_six.setText("物生政");							if(name.indexOf("物理")!=-1&&name.indexOf("化学")!=-1&&name.indexOf("地理")!=-1){								studentInfoModelList_one.add(studentInfoModelList.get(i));							}							if(name.indexOf("物理")!=-1&&name.indexOf("生物")!=-1&&name.indexOf("地理")!=-1){								Log.e("学生","name：you"+name);								studentInfoModelList_two.add(studentInfoModelList.get(i));							}							if(name.indexOf("物理")!=-1&&name.indexOf("化学")!=-1&&name.indexOf("政治")!=-1){								studentInfoModelList_three.add(studentInfoModelList.get(i));							}							if(name.indexOf("物理")!=-1&&name.indexOf("化学")!=-1&&name.indexOf("生物")!=-1){								studentInfoModelList_four.add(studentInfoModelList.get(i));							}							if(name.indexOf("物理")!=-1&&name.indexOf("地理")!=-1&&name.indexOf("政治")!=-1){								studentInfoModelList_five.add(studentInfoModelList.get(i));							}							if(name.indexOf("物理")!=-1&&name.indexOf("生物")!=-1&&name.indexOf("政治")!=-1){								studentInfoModelList_six.add(studentInfoModelList.get(i));							}						}					}					allStudentList.add(studentInfoModelList_one);					allStudentList.add(studentInfoModelList_two);					allStudentList.add(studentInfoModelList_three);					allStudentList.add(studentInfoModelList_four);					allStudentList.add(studentInfoModelList_five);					allStudentList.add(studentInfoModelList_six);					if(type==0){						nameList.clear();						nameList.add("历化政");						nameList.add("历化生");						nameList.add("历生政");						nameList.add("历化地");						nameList.add("历地政");						nameList.add("历生地");					}					for (int i=0;i< sortArr(allStudentList).size();i++){						if (i==0){							StudentNewCXXKAdapter adapter = new StudentNewCXXKAdapter(CXXKStudentActivity.this,allStudentList.get(i));							gv_one.setAdapter(adapter);							tv_one.setText(nameList.get(i));						}else  if (i==1){							StudentNewCXXKAdapter adapter = new StudentNewCXXKAdapter(CXXKStudentActivity.this,allStudentList.get(i));							gv_two.setAdapter(adapter);							tv_two.setText(nameList.get(i));						}else  if (i==2){							StudentNewCXXKAdapter adapter = new StudentNewCXXKAdapter(CXXKStudentActivity.this,allStudentList.get(i));							gv_three.setAdapter(adapter);							tv_three.setText(nameList.get(i));						}else  if (i==3){							StudentNewCXXKAdapter adapter = new StudentNewCXXKAdapter(CXXKStudentActivity.this,allStudentList.get(i));							gv_four.setAdapter(adapter);							tv_four.setText(nameList.get(i));						}else  if (i==4){							StudentNewCXXKAdapter adapter = new StudentNewCXXKAdapter(CXXKStudentActivity.this,allStudentList.get(i));							gv_five.setAdapter(adapter);							tv_five.setText(nameList.get(i));						}else{							StudentNewCXXKAdapter adapter = new StudentNewCXXKAdapter(CXXKStudentActivity.this,allStudentList.get(i));							gv_six.setAdapter(adapter);							tv_six.setText(nameList.get(i));						}					}					break;				}				case 520:{					Toast.makeText(CXXKStudentActivity.this, "查无数据",Toast.LENGTH_SHORT).show();					break;				}			}		};	};	public  List<List<StudentInfoModel>> sortArr( List<List<StudentInfoModel>> allStudentList)	{		for (int x = 0; x<allStudentList.size() ; x++)		{			for (int y = x + 1; y<allStudentList.size(); y++)			{				if (allStudentList.get(x).size()<allStudentList.get(y).size())				{					String temp=nameList.get(x);					nameList.set(x,nameList.get(y));					nameList.set(y,temp);					List<StudentInfoModel> studentInfoModelListtemp = allStudentList.get(x);					allStudentList.set(x,allStudentList.get(y));					allStudentList.set(y,studentInfoModelListtemp);				}			}		}		return allStudentList;	}//end of method so	private void showProgressDialog() {		if (progressDialog == null) {			progressDialog = ProgressDialog.show(this, null, "加载中", false, false);		}	}	private void closeProgressDialog() {		if (progressDialog != null && progressDialog.isShowing()) {			progressDialog.dismiss();			progressDialog = null;		}	}	@Override	protected void onStart() {		super.onStart();		application.handler_touch.removeMessages(0);		application.handler_touch.sendEmptyMessageDelayed(0, application.screensaver_time * 1000);	}	@Override	protected void onResume() {		super.onResume();		application.destroyFloating();	}	@Override	protected void onDestroy() {		super.onDestroy();		imageLoader.clearCache();		imageLoader.cancelTask();		application.destroyFloating();	}	@Override	public boolean dispatchKeyEvent(KeyEvent event) {		switch (event.getAction()) {			case KeyEvent.ACTION_DOWN:				application.handler_touch.removeMessages(0);				break;			case KeyEvent.ACTION_UP:				application.handler_touch.sendEmptyMessageDelayed(0, application.screensaver_time * 1000);				break;		}		return super.dispatchKeyEvent(event);	}	@Override	public boolean dispatchTouchEvent(MotionEvent ev) {		if (ev.getAction() == MotionEvent.ACTION_DOWN) {		}		switch (ev.getAction()) {			case MotionEvent.ACTION_DOWN:				application.handler_touch.removeMessages(0);				break;			case MotionEvent.ACTION_UP:				application.handler_touch.sendEmptyMessageDelayed(0, application.screensaver_time * 1000);				break;		}		return super.dispatchTouchEvent(ev);	}}