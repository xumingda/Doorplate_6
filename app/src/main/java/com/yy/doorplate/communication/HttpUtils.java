package com.yy.doorplate.communication;import java.util.List;import java.util.Random;import org.apache.http.HttpEntity;import org.apache.http.HttpResponse;import org.apache.http.HttpStatus;import org.apache.http.client.HttpClient;import org.apache.http.client.methods.HttpPost;import org.apache.http.entity.StringEntity;import org.apache.http.impl.client.DefaultHttpClient;import org.apache.http.params.CoreConnectionPNames;import org.apache.http.util.EntityUtils;import org.json.JSONArray;import org.json.JSONException;import org.json.JSONObject;import android.content.Context;import android.text.TextUtils;import android.util.Log;import com.yy.doorplate.MyApplication;import com.yy.doorplate.model.AnswerModel;import com.yy.doorplate.model.AttendInfoModel;import com.yy.doorplate.model.ClassFeedbackModel;import com.yy.doorplate.model.ClockInfoModel;import com.yy.doorplate.model.EquWorkInfoModel;import com.yy.doorplate.model.FileDownloadProcessModel;import com.yy.doorplate.model.LeaveModel;import com.yy.doorplate.model.LeaveMsgModel;import com.yy.doorplate.model.PersonnelAttendanceModel;import com.yy.doorplate.model.QuestionModel;import com.yy.doorplate.model.QuestionNaireModel;import com.yy.doorplate.model.VideoInfoModel;import com.yy.doorplate.model.VoteInfoModel;public class HttpUtils {	private static final String TAG = "HttpUtils";	private static final String APP_ID = "1301";	private static final String ACTION = ".action";	private MyApplication application;	public HttpUtils(Context mContext) {		application = (MyApplication) mContext;	}	public String post(String url, JSONObject jsonObject) {		url = application.getServer_ip() + "/doorplate/" + url + ACTION;		Log.i(TAG, url + "\n" + jsonObject.toString());		String data = null;		try {			HttpPost post = new HttpPost(url);			post.addHeader("Content-Type", "application/json");			post.setEntity(new StringEntity(jsonObject.toString(), "UTF-8"));			HttpClient client = new DefaultHttpClient();			client.getParams().setParameter(CoreConnectionPNames.CONNECTION_TIMEOUT, 5000);			client.getParams().setParameter(CoreConnectionPNames.SO_TIMEOUT, 30000);			HttpResponse response = client.execute(post);			int status = response.getStatusLine().getStatusCode();			if (status == HttpStatus.SC_OK) {				HttpEntity entity = response.getEntity();				data = EntityUtils.toString(entity, "UTF-8");			}			Log.i(TAG, "status : " + status + " response : " + data);		} catch (Exception e) {			e.printStackTrace();		}		return data;	}	// public String get(String url) {	// Log.i(TAG, url);	// String data = null;	// try {	// HttpGet httpGet = new HttpGet(url);	// HttpClient client = new DefaultHttpClient();	// client.getParams().setParameter(	// CoreConnectionPNames.CONNECTION_TIMEOUT, 5000);	// client.getParams().setParameter(CoreConnectionPNames.SO_TIMEOUT,	// 30000);	// HttpResponse response = client.execute(httpGet);	// int status = response.getStatusLine().getStatusCode();	// if (status == HttpStatus.SC_OK) {	// HttpEntity entity = response.getEntity();	// data = EntityUtils.toString(entity, "UTF-8");	// }	// Log.i(TAG, "status : " + status + " response : " + data);	// } catch (Exception e) {	// e.printStackTrace();	// }	// return data;	// }	public String post_accSys(String url, JSONObject jsonObject) {		url = application.getServer_ip() + "/accSys/" + url + ACTION;		Log.i(TAG, url + "\n" + jsonObject.toString());		String data = null;		try {			HttpPost post = new HttpPost(url);			post.addHeader("Content-Type", "application/json");			post.setEntity(new StringEntity(jsonObject.toString(), "UTF-8"));			HttpClient client = new DefaultHttpClient();			client.getParams().setParameter(CoreConnectionPNames.CONNECTION_TIMEOUT, 5000);			client.getParams().setParameter(CoreConnectionPNames.SO_TIMEOUT, 30000);			HttpResponse response = client.execute(post);			int status = response.getStatusLine().getStatusCode();			if (status == HttpStatus.SC_OK) {				HttpEntity entity = response.getEntity();				data = EntityUtils.toString(entity, "UTF-8");			}			Log.i(TAG, "status : " + status + " response : " + data);		} catch (Exception e) {			e.printStackTrace();		}		return data;	}	// public String post_updata(String url, JSONObject jsonObject) {	// url = application.getServer_ip() + "/admin/common/" + url	// + ACTION;	// Log.i(TAG, url + "\n" + jsonObject.toString());	// String data = null;	// try {	// HttpPost post = new HttpPost(url);	// post.addHeader("Content-Type", "application/json");	// post.setEntity(new StringEntity(jsonObject.toString(), "UTF-8"));	//	// HttpClient client = new DefaultHttpClient();	// client.getParams().setParameter(	// CoreConnectionPNames.CONNECTION_TIMEOUT, 5000);	// client.getParams().setParameter(CoreConnectionPNames.SO_TIMEOUT,	// 30000);	// HttpResponse response = client.execute(post);	// int status = response.getStatusLine().getStatusCode();	// if (status == HttpStatus.SC_OK) {	// HttpEntity entity = response.getEntity();	// data = EntityUtils.toString(entity, "UTF-8");	// }	// Log.i(TAG, "status : " + status + " response : " + data);	// } catch (Exception e) {	// e.printStackTrace();	// }	// return data;	// }	// 设备注册	public JSONObject getJsonRegister(String equName, String jssysdm, String bjdm, String orgId, String ip,									  String gateway, String mask, String dns1, String dns2) {		JSONObject object = new JSONObject();		if (MyApplication.RUNNING_TARGET == MyApplication.RUNNING_TARGET_PHONE_TEST) {			String json = "{\"appId\":\"1301\",\"data\":{\"bjdm\":\"101\",\"dns\":\"0.0.0.0\",\"dns2\":\"0.0.0.0\",\"equCode\":\"360293545224970987\",\"equName\":\"test\",\"equType\":\"OTHER\",\"gateway\":\"0.0.0.0\",\"ip\":\"0.0.0.0\",\"jssysdm\":\"101\",\"orgId\":\"2\",\"subMask\":\"0.0.0.0\"},\"keyId\":\"EQU_CODE\",\"keyValue\":\"360293545224970987\",\"token\":\"2019032308440000\",\"tranId\":\"201903230844003182476630689612\",\"versionCode\":\"5.1.18.hz\"}";			try {				object = new JSONObject(json);			} catch (org.json.JSONException ex) {				ex.printStackTrace();			}		} else if (MyApplication.RUNNING_TARGET == MyApplication.RUNNING_TARGET_PHONE) {			try {				object.put("appId", APP_ID);				object.put("token", MyApplication.getTime("yyyyMMddHHmmss") + "00");				object.put("tranId", MyApplication.getTime("yyyyMMddHHmmss") + getRandom());				object.put("keyId", "EQU_CODE");				object.put("keyValue", MyApplication.getEquId());				object.put("versionCode", application.getVersionName());				JSONObject data = new JSONObject();				data.put("equCode", MyApplication.getEquId());				data.put("equName", equName);				data.put("jssysdm", jssysdm);				if (TextUtils.isEmpty(bjdm)) {					data.put("bjdm", "");				} else {					data.put("bjdm", bjdm);				}				data.put("equType", "OTHER");				data.put("ip", ip);				data.put("gateway", gateway);				data.put("subMask", mask);				data.put("dns", dns1);				data.put("dns2", dns2);				//data.put("orgId", orgId);				data.put("orgId", 2);				object.put("data", data);			} catch (JSONException e) {				e.printStackTrace();			}		} else {			try {				object.put("appId", APP_ID);				object.put("token", MyApplication.getTime("yyyyMMddHHmmss") + "00");				object.put("tranId", MyApplication.getTime("yyyyMMddHHmmss") + getRandom());				object.put("keyId", "EQU_CODE");				object.put("keyValue", MyApplication.getEquId());				object.put("versionCode", application.getVersionName());				JSONObject data = new JSONObject();				data.put("equCode", MyApplication.getEquId());				data.put("equName", equName);				data.put("jssysdm", jssysdm);				if (TextUtils.isEmpty(bjdm)) {					data.put("bjdm", "");				} else {					data.put("bjdm", bjdm);				}				data.put("equType", "OTHER");				data.put("ip", ip);				data.put("gateway", gateway);				data.put("subMask", mask);				data.put("dns", dns1);				data.put("dns2", dns2);				//data.put("orgId", orgId);				data.put("orgId", 2);				object.put("data", data);			} catch (JSONException e) {				e.printStackTrace();			}		}		return object;	}	// 设备设置查询	public JSONObject getJsonQryEqu() {		JSONObject object = new JSONObject();		try {			object.put("appId", APP_ID);			object.put("token", MyApplication.getTime("yyyyMMddHHmmss") + "00");			object.put("tranId", MyApplication.getTime("yyyyMMddHHmmss") + getRandom());			object.put("keyId", "EQU_CODE");			object.put("keyValue", MyApplication.getEquId());			object.put("versionCode", application.getVersionName());			JSONObject data = new JSONObject();			data.put("equCode", MyApplication.getEquId());			object.put("data", data);		} catch (JSONException e) {			e.printStackTrace();		}		return object;	}	// 查询教室信息	public JSONObject getJsonQryClass(String jssysdm) {		JSONObject object = new JSONObject();		try {			object.put("appId", APP_ID);			object.put("token", MyApplication.getTime("yyyyMMddHHmmss") + "00");			object.put("tranId", MyApplication.getTime("yyyyMMddHHmmss") + getRandom());			object.put("keyId", "JSSYSDM");			object.put("keyValue", jssysdm);			object.put("versionCode", application.getVersionName());			JSONObject data = new JSONObject();			data.put("jssysdm", jssysdm);			data.put("equCode", MyApplication.getEquId());			object.put("data", data);		} catch (JSONException e) {			e.printStackTrace();		}		return object;	}	// 查询班训信息	public JSONObject getJsonQryClassMotto(final String bjdm) {		JSONObject object = new JSONObject();		try {			object.put("appId", APP_ID);			object.put("token", MyApplication.getTime("yyyyMMddHHmmss") + "00");			object.put("tranId", MyApplication.getTime("yyyyMMddHHmmss") + getRandom());			object.put("keyId", "EQU_CODE");			object.put("keyValue", MyApplication.getEquId());			object.put("versionCode", application.getVersionName());			JSONObject data = new JSONObject();			data.put("bjdm", bjdm);			data.put("equCode", MyApplication.getEquId());			object.put("data", data);		} catch (JSONException e) {			e.printStackTrace();		}		return object;	}	// 查询版本号接口	public JSONObject getJsonVersion() {		JSONObject object = new JSONObject();		try {			object.put("appId", APP_ID);			object.put("token", MyApplication.getTime("yyyyMMddHHmmss") + "00");			object.put("tranId", MyApplication.getTime("yyyyMMddHHmmss") + getRandom());			object.put("keyId", "APPID");			object.put("keyValue", APP_ID);			object.put("versionCode", application.getVersionName());			JSONObject data = new JSONObject();			data.put("appId", APP_ID);			data.put("equCode", MyApplication.getEquId());			object.put("data", data);		} catch (JSONException e) {			e.printStackTrace();		}		return object;	}	// 查询通知	public JSONObject getJsonQryNotice(String jssysdm, String page, String pageCount, String lmdm, String xxztlb,									   String bjdm) {		JSONObject object = new JSONObject();		try {			object.put("appId", APP_ID);			object.put("token", MyApplication.getTime("yyyyMMddHHmmss") + "00");			object.put("tranId", MyApplication.getTime("yyyyMMddHHmmss") + getRandom());			object.put("keyId", "JSSYSDM");			object.put("keyValue", jssysdm);			object.put("versionCode", application.getVersionName());			JSONObject data = new JSONObject();			data.put("equCode", MyApplication.getEquId());			data.put("jssysdm", jssysdm);			JSONObject pageInfo = new JSONObject();			pageInfo.put("page", page);			pageInfo.put("pageCount", pageCount);			pageInfo.put("total", "");			data.put("pageInfo", pageInfo);			data.put("lmdm", lmdm);			data.put("xxztlb", xxztlb);			data.put("bjdm", bjdm);			object.put("data", data);		} catch (JSONException e) {			e.printStackTrace();		}		return object;	}	// 查询课程	public JSONObject getJsonQryCurriculum(String jssysdm, String startDate, String endDate, String rybh) {		JSONObject object = new JSONObject();		try {			object.put("appId", APP_ID);			object.put("token", MyApplication.getTime("yyyyMMddHHmmss") + "00");			object.put("tranId", MyApplication.getTime("yyyyMMddHHmmss") + getRandom());			object.put("keyId", "JSSYSDM");			object.put("keyValue", jssysdm);			object.put("versionCode", application.getVersionName());			JSONObject data = new JSONObject();			data.put("equCode", MyApplication.getEquId());			data.put("jssysdm", jssysdm);			data.put("startDate", startDate);			data.put("endDate", endDate);			data.put("rybh", rybh);			object.put("data", data);		} catch (JSONException e) {			e.printStackTrace();		}		return object;	}	// 考勤上报	public JSONObject getJsonCommitAttend(String xsxh, AttendInfoModel model) {		JSONObject object = new JSONObject();		try {			object.put("appId", APP_ID);			object.put("token", MyApplication.getTime("yyyyMMddHHmmss") + "00");			object.put("tranId", MyApplication.getTime("yyyyMMddHHmmss") + getRandom());			object.put("keyId", "XSXH");			object.put("keyValue", xsxh);			object.put("versionCode", application.getVersionName());			JSONObject data = new JSONObject();			data.put("equCode", MyApplication.getEquId());			JSONObject model2 = new JSONObject();			model2.put("id", model.id);			model2.put("xn", model.xn);			model2.put("xq", model.xq);			model2.put("jxrwid", model.jxrwid);			model2.put("kcmc", model.kcmc);			model2.put("zc", model.zc);			model2.put("skrq", model.skrq);			model2.put("jcshow", model.jcshow);			model2.put("skjhid", model.skjhid);			model2.put("ks", model.ks);			model2.put("ssxy", model.ssxy);			model2.put("ssxb", model.ssxb);			model2.put("ssxbmc", model.ssxbmc);			model2.put("ssbj", model.ssbj);			model2.put("ssbjmc", model.ssbjmc);			model2.put("xsxh", model.xsxh);			model2.put("zwh", model.zwh);			model2.put("xsxm", model.xsxm);			model2.put("kqzt", model.kqzt);			model2.put("kqtjry", model.kqtjry);			model2.put("kqtjryxm", model.kqtjryxm);			model2.put("kqsj", model.kqsj);			model2.put("glqj", model.glqj);			model2.put("remark", model.remark);			model2.put("zp", model.zp);			model2.put("xb", model.xb);			model2.put("xskh", model.xskh);			data.put("attendInfo", model2);			object.put("data", data);		} catch (JSONException e) {			e.printStackTrace();		}		return object;	}	// 考勤信息查询	public JSONObject getJsonQryAttend(String jssysdm, String skjhid) {		JSONObject object = new JSONObject();		try {			object.put("appId", APP_ID);			object.put("token", MyApplication.getTime("yyyyMMddHHmmss") + "00");			object.put("tranId", MyApplication.getTime("yyyyMMddHHmmss") + getRandom());			object.put("keyId", "JSSYSDM");			object.put("keyValue", jssysdm);			object.put("versionCode", application.getVersionName());			JSONObject data = new JSONObject();			data.put("equCode", MyApplication.getEquId());			data.put("jssysdm", jssysdm);			data.put("skjhid", skjhid);			object.put("data", data);			Log.e("JSONObject", "getJsonQryAttend:" + object.toString());		} catch (JSONException e) {			e.printStackTrace();		}		return object;	}	// 查询日期时间	public JSONObject getJsonQryDatetime(String orgId) {		JSONObject object = new JSONObject();		try {			object.put("appId", APP_ID);			object.put("token", MyApplication.getTime("yyyyMMddHHmmss") + "00");			object.put("tranId", MyApplication.getTime("yyyyMMddHHmmss") + getRandom());			object.put("keyId", "EQU_CODE");			object.put("keyValue", MyApplication.getEquId());			object.put("versionCode", application.getVersionName());			JSONObject data = new JSONObject();			data.put("equCode", MyApplication.getEquId());			data.put("orgId", orgId);			object.put("data", data);		} catch (JSONException e) {			e.printStackTrace();		}		return object;	}	// 查询班级学生信息	public JSONObject getJsonStudentInfo(String bjdm, String rybh) {		JSONObject object = new JSONObject();		try {			object.put("appId", APP_ID);			object.put("token", MyApplication.getTime("yyyyMMddHHmmss") + "00");			object.put("tranId", MyApplication.getTime("yyyyMMddHHmmss") + getRandom());			object.put("keyId", "BJDM");			object.put("keyValue", bjdm);			object.put("versionCode", application.getVersionName());			JSONObject data = new JSONObject();			data.put("bjdm", bjdm);			data.put("rybh", rybh);			data.put("equCode", MyApplication.getEquId());			object.put("data", data);		} catch (JSONException e) {			e.printStackTrace();		}		return object;	}	// 操作授权	public JSONObject getJsonPermission(String jssysdm, String operateType, String authorizationType, String userName,										String password, String jobCardNo) {		JSONObject object = new JSONObject();		try {			object.put("appId", APP_ID);			object.put("token", MyApplication.getTime("yyyyMMddHHmmss") + "00");			object.put("tranId", MyApplication.getTime("yyyyMMddHHmmss") + getRandom());			object.put("keyId", "JSSYSDM");			object.put("keyValue", jssysdm);			object.put("versionCode", application.getVersionName());			JSONObject data = new JSONObject();			data.put("jssysdm", jssysdm);			data.put("equCode", MyApplication.getEquId());			data.put("operateType", operateType);			data.put("authorizationType", authorizationType);			data.put("userName", userName);			data.put("password", password);			data.put("jobCardNo", jobCardNo);			object.put("data", data);		} catch (JSONException e) {			e.printStackTrace();		}		return object;	}	// 查询设备列表	public JSONObject getJsonEQList(String jssysdm) {		JSONObject object = new JSONObject();		try {			object.put("appId", APP_ID);			object.put("token", MyApplication.getTime("yyyyMMddHHmmss") + "00");			object.put("tranId", MyApplication.getTime("yyyyMMddHHmmss") + getRandom());			object.put("keyId", "JSSYSDM");			object.put("keyValue", jssysdm);			object.put("versionCode", application.getVersionName());			JSONObject data = new JSONObject();			data.put("jssysdm", jssysdm);			data.put("equCode", MyApplication.getEquId());			object.put("data", data);		} catch (JSONException e) {			e.printStackTrace();		}		return object;	}	// 查询播放任务	public JSONObject getJsonPlayTask(String jssysdm) {		JSONObject object = new JSONObject();		try {			object.put("appId", APP_ID);			object.put("token", MyApplication.getTime("yyyyMMddHHmmss") + "00");			object.put("tranId", MyApplication.getTime("yyyyMMddHHmmss") + getRandom());			object.put("keyId", "JSSYSDM");			object.put("keyValue", jssysdm);			object.put("versionCode", application.getVersionName());			JSONObject data = new JSONObject();			data.put("jssysdm", jssysdm);			data.put("equCode", MyApplication.getEquId());			object.put("data", data);		} catch (JSONException e) {			e.printStackTrace();		}		return object;	}	// 查询教师信息	public JSONObject getJsonTeacher(String jssysdm, String skjsbm) {		JSONObject object = new JSONObject();		try {			object.put("appId", APP_ID);			object.put("token", MyApplication.getTime("yyyyMMddHHmmss") + "00");			object.put("tranId", MyApplication.getTime("yyyyMMddHHmmss") + getRandom());			object.put("keyId", "SKJSBM");			object.put("keyValue", skjsbm);			object.put("versionCode", application.getVersionName());			JSONObject data = new JSONObject();			data.put("jssysdm", jssysdm);			data.put("equCode", MyApplication.getEquId());			data.put("skjsbm", skjsbm);			object.put("data", data);		} catch (JSONException e) {			e.printStackTrace();		}		return object;	}	// 查询人员信息	public JSONObject getJsonPerson(String jssysdm, String cardNo) {		JSONObject object = new JSONObject();		try {			object.put("appId", APP_ID);			object.put("token", MyApplication.getTime("yyyyMMddHHmmss") + "00");			object.put("tranId", MyApplication.getTime("yyyyMMddHHmmss") + getRandom());			object.put("keyId", "CARDNO");			object.put("keyValue", cardNo);			object.put("versionCode", application.getVersionName());			JSONObject data = new JSONObject();			data.put("jssysdm", jssysdm);			data.put("equCode", MyApplication.getEquId());			data.put("cardNo", cardNo);			object.put("data", data);		} catch (JSONException e) {			e.printStackTrace();		}		return object;	}	// 控制信息同步	public JSONObject getJsonCommitControl(String jssysdm, JSONArray controlInfoList) {		JSONObject object = new JSONObject();		try {			object.put("appId", APP_ID);			object.put("token", MyApplication.getTime("yyyyMMddHHmmss") + "00");			object.put("tranId", MyApplication.getTime("yyyyMMddHHmmss") + getRandom());			object.put("keyId", "EQU_CODE");			object.put("keyValue", MyApplication.getEquId());			object.put("versionCode", application.getVersionName());			JSONObject data = new JSONObject();			data.put("jssysdm", jssysdm);			data.put("equCode", MyApplication.getEquId());			data.put("controlInfoList", controlInfoList);			object.put("data", data);		} catch (JSONException e) {			e.printStackTrace();		}		return object;	}	// 查询荣誉墙信息	public JSONObject getJsonPrize(String jssysdm, String xsxh) {		JSONObject object = new JSONObject();		try {			object.put("appId", APP_ID);			object.put("token", MyApplication.getTime("yyyyMMddHHmmss") + "00");			object.put("tranId", MyApplication.getTime("yyyyMMddHHmmss") + getRandom());			object.put("keyId", "EQU_CODE");			object.put("keyValue", MyApplication.getEquId());			object.put("versionCode", application.getVersionName());			JSONObject data = new JSONObject();			data.put("jssysdm", jssysdm);			data.put("equCode", MyApplication.getEquId());			data.put("xsxh", xsxh);			object.put("data", data);		} catch (JSONException e) {			e.printStackTrace();		}		return object;	}	// 查询小黑板信息	public JSONObject getJsonBlackboard(String jssysdm) {		JSONObject object = new JSONObject();		try {			object.put("appId", APP_ID);			object.put("token", MyApplication.getTime("yyyyMMddHHmmss") + "00");			object.put("tranId", MyApplication.getTime("yyyyMMddHHmmss") + getRandom());			object.put("keyId", "EQU_CODE");			object.put("keyValue", MyApplication.getEquId());			object.put("versionCode", application.getVersionName());			JSONObject data = new JSONObject();			data.put("jssysdm", jssysdm);			data.put("equCode", MyApplication.getEquId());			object.put("data", data);		} catch (JSONException e) {			e.printStackTrace();		}		return object;	}	// 查询值日信息	public JSONObject getJsonOnDuty(String jssysdm) {		JSONObject object = new JSONObject();		try {			object.put("appId", APP_ID);			object.put("token", MyApplication.getTime("yyyyMMddHHmmss") + "00");			object.put("tranId", MyApplication.getTime("yyyyMMddHHmmss") + getRandom());			object.put("keyId", "EQU_CODE");			object.put("keyValue", MyApplication.getEquId());			object.put("versionCode", application.getVersionName());			JSONObject data = new JSONObject();			data.put("jssysdm", jssysdm);			data.put("equCode", MyApplication.getEquId());			object.put("data", data);		} catch (JSONException e) {			e.printStackTrace();		}		return object;	}	// 查询学校信息	public JSONObject getJsonSchool(String jssysdm) {		JSONObject object = new JSONObject();		try {			object.put("appId", APP_ID);			object.put("token", MyApplication.getTime("yyyyMMddHHmmss") + "00");			object.put("tranId", MyApplication.getTime("yyyyMMddHHmmss") + getRandom());			object.put("keyId", "EQU_CODE");			object.put("keyValue", MyApplication.getEquId());			object.put("versionCode", application.getVersionName());			JSONObject data = new JSONObject();			data.put("jssysdm", jssysdm);			data.put("equCode", MyApplication.getEquId());			object.put("data", data);		} catch (JSONException e) {			e.printStackTrace();		}		return object;	}	// 查询问卷调查信息	public JSONObject getJsonQuset(String jssysdm, String questionnaireCode) {		JSONObject object = new JSONObject();		try {			object.put("appId", APP_ID);			object.put("token", MyApplication.getTime("yyyyMMddHHmmss") + "00");			object.put("tranId", MyApplication.getTime("yyyyMMddHHmmss") + getRandom());			object.put("keyId", "EQU_CODE");			object.put("keyValue", MyApplication.getEquId());			object.put("versionCode", application.getVersionName());			JSONObject data = new JSONObject();			data.put("jssysdm", jssysdm);			data.put("equCode", MyApplication.getEquId());			data.put("questionnaireCode", questionnaireCode);			object.put("data", data);		} catch (JSONException e) {			e.printStackTrace();		}		return object;	}	// 问卷调查信息提交	public JSONObject getJsonCommitQuset(String jssysdm, QuestionNaireModel model) {		JSONObject object = new JSONObject();		try {			object.put("appId", APP_ID);			object.put("token", MyApplication.getTime("yyyyMMddHHmmss") + "00");			object.put("tranId", MyApplication.getTime("yyyyMMddHHmmss") + getRandom());			object.put("keyId", "EQU_CODE");			object.put("keyValue", MyApplication.getEquId());			object.put("versionCode", application.getVersionName());			JSONObject data = new JSONObject();			data.put("jssysdm", jssysdm);			data.put("equCode", MyApplication.getEquId());			JSONObject jsonObject = new JSONObject();			jsonObject.put("title", model.title);			jsonObject.put("questionnaireCode", model.questionnaireCode);			jsonObject.put("questionnaireDesc", model.questionnaireDesc);			try {				jsonObject.put("questionnaireBelongKind", model.questionnaireBelongKind);				jsonObject.put("questionnaireIconAddress", model.questionnaireIconAddress);			} catch (Exception e1) {				e1.printStackTrace();			}			if (model.questionList != null && model.questionList.size() > 0) {				JSONArray jsonArray = new JSONArray();				try {					for (QuestionModel questionModel : model.questionList) {						JSONObject jsonObject2 = new JSONObject();						jsonObject2.put("questionCode", questionModel.questionCode);						jsonObject2.put("question", questionModel.question);						jsonObject2.put("questionnaireCode", questionModel.questionnaireCode);						jsonObject2.put("answerType", questionModel.answerType);						// jsonObject2.put("optionList", "");						if (questionModel.answerInfo != null) {							JSONObject jsonObject3 = new JSONObject();							jsonObject3.put("questionCode", questionModel.answerInfo.questionCode);							jsonObject3.put("answer", questionModel.answerInfo.answer);							jsonObject3.put("replyPerson", questionModel.answerInfo.replyPerson);							jsonObject2.put("answerInfo", jsonObject3);						}						// else {						// jsonObject2.put("answerInfo", "");						// }						jsonArray.put(jsonObject2);					}				} catch (JSONException e) {					e.printStackTrace();				}				jsonObject.put("questionList", jsonArray);			} else {				jsonObject.put("questionList", "");			}			data.put("questionnaireInfo", jsonObject);			object.put("data", data);		} catch (JSONException e) {			e.printStackTrace();		}		return object;	}	// 查询天气信息	public JSONObject getJsonWeather(String jssysdm) {		JSONObject object = new JSONObject();		try {			object.put("appId", APP_ID);			object.put("token", MyApplication.getTime("yyyyMMddHHmmss") + "00");			object.put("tranId", MyApplication.getTime("yyyyMMddHHmmss") + getRandom());			object.put("keyId", "EQU_CODE");			object.put("keyValue", MyApplication.getEquId());			object.put("versionCode", application.getVersionName());			JSONObject data = new JSONObject();			data.put("jssysdm", jssysdm);			data.put("equCode", MyApplication.getEquId());			object.put("data", data);		} catch (JSONException e) {			e.printStackTrace();		}		return object;	}	// 设备运行信息提交	public JSONObject getJsonCommitEqu(String jssysdm, EquWorkInfoModel model) {		JSONObject object = new JSONObject();		try {			object.put("appId", APP_ID);			object.put("token", MyApplication.getTime("yyyyMMddHHmmss") + "00");			object.put("tranId", MyApplication.getTime("yyyyMMddHHmmss") + getRandom());			object.put("keyId", "EQU_CODE");			object.put("keyValue", MyApplication.getEquId());			object.put("versionCode", application.getVersionName());			JSONObject data = new JSONObject();			data.put("jssysdm", jssysdm);			data.put("equCode", MyApplication.getEquId());			JSONObject jsonObject = new JSONObject();			jsonObject.put("startTime", model.startTime);			jsonObject.put("nextStopTime", model.nextStopTime);			jsonObject.put("nextStartTime", model.nextStartTime);			jsonObject.put("cpu", model.cpu);			jsonObject.put("physMem", model.physMem);			jsonObject.put("usedMem", model.usedMem);			jsonObject.put("diskSpace", model.diskSpace);			jsonObject.put("usedSpace", model.usedSpace);			jsonObject.put("currentScreen", model.currentScreen);			data.put("equWorkInfo", jsonObject);			object.put("data", data);		} catch (JSONException e) {			e.printStackTrace();		}		return object;	}	// 设备模式任务下发	public JSONObject getJsonEquModel(String jssysdm) {		JSONObject object = new JSONObject();		try {			object.put("appId", APP_ID);			object.put("token", MyApplication.getTime("yyyyMMddHHmmss") + "00");			object.put("tranId", MyApplication.getTime("yyyyMMddHHmmss") + getRandom());			object.put("keyId", "EQU_CODE");			object.put("keyValue", MyApplication.getEquId());			object.put("versionCode", application.getVersionName());			JSONObject data = new JSONObject();			data.put("jssysdm", jssysdm);			data.put("equCode", MyApplication.getEquId());			object.put("data", data);		} catch (JSONException e) {			e.printStackTrace();		}		return object;	}	// 考试安排查询	public JSONObject getJsonExam(String jssysdm) {		JSONObject object = new JSONObject();		try {			object.put("appId", APP_ID);			object.put("token", MyApplication.getTime("yyyyMMddHHmmss") + "00");			object.put("tranId", MyApplication.getTime("yyyyMMddHHmmss") + getRandom());			object.put("keyId", "EQU_CODE");			object.put("keyValue", MyApplication.getEquId());			object.put("versionCode", application.getVersionName());			JSONObject data = new JSONObject();			data.put("jssysdm", jssysdm);			data.put("equCode", MyApplication.getEquId());			object.put("data", data);		} catch (JSONException e) {			e.printStackTrace();		}		return object;	}	// 命令执行反馈提交	public JSONObject getJsonBack(String cmdSn, String id, String message) {		JSONObject object = new JSONObject();		try {			object.put("appId", APP_ID);			object.put("token", MyApplication.getTime("yyyyMMddHHmmss") + "00");			object.put("tranId", MyApplication.getTime("yyyyMMddHHmmss") + getRandom());			object.put("keyId", "EQU_CODE");			object.put("keyValue", MyApplication.getEquId());			object.put("versionCode", application.getVersionName());			JSONObject data = new JSONObject();			data.put("cmdSn", cmdSn);			data.put("equCode", MyApplication.getEquId());			JSONObject error = new JSONObject();			error.put("id", id);			error.put("message", message);			data.put("error", error);			object.put("data", data);		} catch (JSONException e) {			e.printStackTrace();		}		return object;	}	// 获取节目单信息	public JSONObject getJsonMedia() {		JSONObject object = new JSONObject();		try {			object.put("appId", APP_ID);			object.put("token", MyApplication.getTime("yyyyMMddHHmmss") + "00");			object.put("tranId", MyApplication.getTime("yyyyMMddHHmmss") + getRandom());			object.put("keyId", "EQU_CODE");			object.put("keyValue", MyApplication.getEquId());			object.put("versionCode", application.getVersionName());			JSONObject data = new JSONObject();			data.put("equCode", MyApplication.getEquId());			object.put("data", data);		} catch (JSONException e) {			e.printStackTrace();		}		return object;	}	// 提交文件下载进度反馈信息	public JSONObject getJsonFileProcess(List<FileDownloadProcessModel> list) {		JSONObject object = new JSONObject();		try {			object.put("appId", APP_ID);			object.put("token", MyApplication.getTime("yyyyMMddHHmmss") + "00");			object.put("tranId", MyApplication.getTime("yyyyMMddHHmmss") + getRandom());			object.put("keyId", "EQU_CODE");			object.put("keyValue", MyApplication.getEquId());			object.put("versionCode", application.getVersionName());			JSONObject data = new JSONObject();			data.put("equCode", MyApplication.getEquId());			JSONArray jsonArray = new JSONArray();			if (list != null && list.size() > 0) {				for (FileDownloadProcessModel model : list) {					JSONObject jsonObject = new JSONObject();					jsonObject.put("equCode", model.equCode);					jsonObject.put("schedule", model.schedule);					jsonObject.put("fileName", model.fileName);					jsonObject.put("status", model.status);					jsonArray.put(jsonObject);				}			}			data.put("fileDownloadProcessInfoList", jsonArray);			object.put("data", data);		} catch (JSONException e) {			e.printStackTrace();		}		return object;	}	// 查询小视频信息	public JSONObject getJsonVideo(String jssysdm, String videoType, String bjdm, String relaObjValue) {		JSONObject object = new JSONObject();		try {			object.put("appId", APP_ID);			object.put("token", MyApplication.getTime("yyyyMMddHHmmss") + "00");			object.put("tranId", MyApplication.getTime("yyyyMMddHHmmss") + getRandom());			object.put("keyId", "EQU_CODE");			object.put("keyValue", MyApplication.getEquId());			object.put("versionCode", application.getVersionName());			JSONObject data = new JSONObject();			data.put("equCode", MyApplication.getEquId());			data.put("jssysdm", jssysdm);			data.put("videoType", videoType);			data.put("bjdm", bjdm);			data.put("relaObjValue", relaObjValue);			object.put("data", data);		} catch (JSONException e) {			e.printStackTrace();		}		return object;	}	// 更新小视频信息	public JSONObject getJsonVideo(VideoInfoModel model) {		JSONObject object = new JSONObject();		try {			object.put("appId", APP_ID);			object.put("token", MyApplication.getTime("yyyyMMddHHmmss") + "00");			object.put("tranId", MyApplication.getTime("yyyyMMddHHmmss") + getRandom());			object.put("keyId", "EQU_CODE");			object.put("keyValue", MyApplication.getEquId());			object.put("versionCode", application.getVersionName());			JSONObject data = new JSONObject();			data.put("equCode", MyApplication.getEquId());			JSONObject jsonObject = new JSONObject();			jsonObject.put("id", model.id);			jsonObject.put("relaObjType", model.relaObjType);			jsonObject.put("relaObjValue", model.relaObjValue);			jsonObject.put("fileDesc", model.fileDesc);			jsonObject.put("fileName", model.fileName);			jsonObject.put("resPath", model.resPath);			jsonObject.put("status", model.status);			jsonObject.put("likeNum", model.likeNum);			data.put("smallVideo", jsonObject);			object.put("data", data);		} catch (JSONException e) {			e.printStackTrace();		}		return object;	}	// 更新授权用户信息	public JSONObject getJsonUser() {		JSONObject object = new JSONObject();		try {			object.put("appId", APP_ID);			object.put("token", MyApplication.getTime("yyyyMMddHHmmss") + "00");			object.put("tranId", MyApplication.getTime("yyyyMMddHHmmss") + getRandom());			object.put("keyId", "EQU_CODE");			object.put("keyValue", MyApplication.getEquId());			object.put("versionCode", application.getVersionName());			JSONObject data = new JSONObject();			data.put("equCode", MyApplication.getEquId());			object.put("data", data);		} catch (JSONException e) {			e.printStackTrace();		}		return object;	}	// 查询课程信息	public JSONObject getJsonClassInfo(String skjhid) {		JSONObject object = new JSONObject();		try {			object.put("appId", APP_ID);			object.put("token", MyApplication.getTime("yyyyMMddHHmmss") + "00");			object.put("tranId", MyApplication.getTime("yyyyMMddHHmmss") + getRandom());			object.put("keyId", "EQU_CODE");			object.put("keyValue", MyApplication.getEquId());			object.put("versionCode", application.getVersionName());			JSONObject data = new JSONObject();			data.put("equCode", MyApplication.getEquId());			data.put("skjhid", skjhid);			object.put("data", data);		} catch (JSONException e) {			e.printStackTrace();		}		return object;	}	// 提交课后反馈信息	public JSONObject getJsonClassFeedback(ClassFeedbackModel model) {		JSONObject object = new JSONObject();		try {			object.put("appId", APP_ID);			object.put("token", MyApplication.getTime("yyyyMMddHHmmss") + "00");			object.put("tranId", MyApplication.getTime("yyyyMMddHHmmss") + getRandom());			object.put("keyId", "EQU_CODE");			object.put("keyValue", MyApplication.getEquId());			object.put("versionCode", application.getVersionName());			JSONObject data = new JSONObject();			data.put("equCode", MyApplication.getEquId());			JSONObject jsonObject = new JSONObject();			jsonObject.put("id", model.id);			jsonObject.put("skjhid", model.skjhid);			jsonObject.put("feedback", model.feedback);			jsonObject.put("level", model.level);			jsonObject.put("rybh", model.rybh);			data.put("classFeedback", jsonObject);			object.put("data", data);		} catch (JSONException e) {			e.printStackTrace();		}		return object;	}	// 提交打卡信息	public JSONObject getJsonClockInfo(List<ClockInfoModel> list) {		JSONObject object = new JSONObject();		try {			object.put("appId", APP_ID);			object.put("token", MyApplication.getTime("yyyyMMddHHmmss") + "00");			object.put("tranId", MyApplication.getTime("yyyyMMddHHmmss") + getRandom());			object.put("keyId", "EQU_CODE");			object.put("keyValue", MyApplication.getEquId());			object.put("versionCode", application.getVersionName());			JSONObject data = new JSONObject();			data.put("equCode", MyApplication.getEquId());			JSONArray jsonArray = new JSONArray();			if (list != null && list.size() > 0) {				for (ClockInfoModel model : list) {					JSONObject jsonObject = new JSONObject();					jsonObject.put("id", model.id);					jsonObject.put("xm", model.xm);					jsonObject.put("js", model.js);					jsonObject.put("rybh", model.rybh);					jsonObject.put("dkrq", model.dkrq);					jsonObject.put("dksj", model.dksj);					jsonObject.put("dklx", model.dklx);					jsonArray.put(jsonObject);				}			}			data.put("clockInfoList", jsonArray);			object.put("data", data);		} catch (JSONException e) {			e.printStackTrace();		}		return object;	}	// 提交打卡信息	public JSONObject getJsonClockInfo2(String card) {		JSONObject object = new JSONObject();		try {			object.put("appId", APP_ID);			object.put("token", MyApplication.getTime("yyyyMMddHHmmss") + "00");			object.put("tranId", MyApplication.getTime("yyyyMMddHHmmss") + getRandom());			object.put("keyId", "EQU_CODE");			object.put("keyValue", MyApplication.getEquId());			object.put("versionCode", application.getVersionName());			JSONObject data = new JSONObject();			data.put("equCode", MyApplication.getEquId());			data.put("card", card);			object.put("data", data);		} catch (JSONException e) {			e.printStackTrace();		}		return object;	}	// 查询考勤教师信息	public JSONObject getJsonTeacherList() {		JSONObject object = new JSONObject();		try {			object.put("appId", APP_ID);			object.put("token", MyApplication.getTime("yyyyMMddHHmmss") + "00");			object.put("tranId", MyApplication.getTime("yyyyMMddHHmmss") + getRandom());			object.put("keyId", "EQU_CODE");			object.put("keyValue", MyApplication.getEquId());			object.put("versionCode", application.getVersionName());			JSONObject data = new JSONObject();			data.put("equCode", MyApplication.getEquId());			object.put("data", data);		} catch (JSONException e) {			e.printStackTrace();		}		return object;	}	// 查询考勤规则信息	public JSONObject getJsonClockRule() {		JSONObject object = new JSONObject();		try {			object.put("appId", APP_ID);			object.put("token", MyApplication.getTime("yyyyMMddHHmmss") + "00");			object.put("tranId", MyApplication.getTime("yyyyMMddHHmmss") + getRandom());			object.put("keyId", "EQU_CODE");			object.put("keyValue", MyApplication.getEquId());			object.put("versionCode", application.getVersionName());			JSONObject data = new JSONObject();			data.put("equCode", MyApplication.getEquId());			object.put("data", data);		} catch (JSONException e) {			e.printStackTrace();		}		return object;	}	// 查询人员考勤信息	public JSONObject getJsonPersonAttend(String date, String rybh) {		JSONObject object = new JSONObject();		try {			object.put("appId", APP_ID);			object.put("token", MyApplication.getTime("yyyyMMddHHmmss") + "00");			object.put("tranId", MyApplication.getTime("yyyyMMddHHmmss") + getRandom());			object.put("keyId", "EQU_CODE");			object.put("keyValue", MyApplication.getEquId());			object.put("versionCode", application.getVersionName());			JSONObject data = new JSONObject();			data.put("equCode", MyApplication.getEquId());			data.put("date", date);			data.put("rybh", rybh);			object.put("data", data);		} catch (JSONException e) {			e.printStackTrace();		}		return object;	}	// 提交人员考勤信息	public JSONObject getJsonCommitPersonnelAttendance(List<PersonnelAttendanceModel> list) {		JSONObject object = new JSONObject();		try {			object.put("appId", APP_ID);			object.put("token", MyApplication.getTime("yyyyMMddHHmmss") + "00");			object.put("tranId", MyApplication.getTime("yyyyMMddHHmmss") + getRandom());			object.put("keyId", "EQU_CODE");			object.put("keyValue", MyApplication.getEquId());			object.put("versionCode", application.getVersionName());			JSONObject data = new JSONObject();			data.put("equCode", MyApplication.getEquId());			JSONArray jsonArray = new JSONArray();			if (list != null && list.size() > 0) {				for (PersonnelAttendanceModel model : list) {					JSONObject jsonObject = new JSONObject();					jsonObject.put("id", model.id);					jsonObject.put("date", model.date);					jsonObject.put("toWorkTime", model.toWorkTime);					jsonObject.put("offWorkTime", model.offWorkTime);					jsonObject.put("rybh", model.rybh);					jsonObject.put("xm", model.xm);					jsonObject.put("js", model.js);					jsonObject.put("isToWorkClock", model.isToWorkClock);					jsonObject.put("isOffWorkClock", model.isOffWorkClock);					jsonObject.put("status", model.status);					try {						jsonObject.put("cardid", model.cardid);						jsonObject.put("toWorkClockTime", model.toWorkClockTime);						jsonObject.put("offWorkClockTime", model.offWorkClockTime);					} catch (Exception e) {						e.printStackTrace();					}					jsonArray.put(jsonObject);				}			}			data.put("personnelAttendanceList", jsonArray);			object.put("data", data);		} catch (JSONException e) {			e.printStackTrace();		}		return object;	}	// 查询最近考勤信息	public JSONObject getJsonNearAttend(String cardId) {		JSONObject object = new JSONObject();		try {			object.put("appId", APP_ID);			object.put("token", MyApplication.getTime("yyyyMMddHHmmss") + "00");			object.put("tranId", MyApplication.getTime("yyyyMMddHHmmss") + getRandom());			object.put("keyId", "EQU_CODE");			object.put("keyValue", MyApplication.getEquId());			object.put("versionCode", application.getVersionName());			JSONObject data = new JSONObject();			data.put("equCode", MyApplication.getEquId());			data.put("cardId", cardId);			object.put("data", data);		} catch (JSONException e) {			e.printStackTrace();		}		return object;	}	// 查询投票主题信息	public JSONObject getJsonVote(String page, String pageCount, String voteThemeId, String activityKind) {		JSONObject object = new JSONObject();		try {			object.put("appId", APP_ID);			object.put("token", MyApplication.getTime("yyyyMMddHHmmss") + "00");			object.put("tranId", MyApplication.getTime("yyyyMMddHHmmss") + getRandom());			object.put("keyId", "EQU_CODE");			object.put("keyValue", MyApplication.getEquId());			object.put("versionCode", application.getVersionName());			JSONObject data = new JSONObject();			JSONObject pageInfo = new JSONObject();			pageInfo.put("page", page);			pageInfo.put("pageCount", pageCount);			pageInfo.put("total", "");			data.put("pageInfo", pageInfo);			data.put("equCode", MyApplication.getEquId());			data.put("voteThemeId", voteThemeId);			data.put("activityKind", activityKind);			object.put("data", data);		} catch (JSONException e) {			e.printStackTrace();		}		return object;	}	// 提交投票信息	public JSONObject getJsonCommitVote(List<VoteInfoModel> list) {		JSONObject object = new JSONObject();		try {			object.put("appId", APP_ID);			object.put("token", MyApplication.getTime("yyyyMMddHHmmss") + "00");			object.put("tranId", MyApplication.getTime("yyyyMMddHHmmss") + getRandom());			object.put("keyId", "EQU_CODE");			object.put("keyValue", MyApplication.getEquId());			object.put("versionCode", application.getVersionName());			JSONObject data = new JSONObject();			data.put("equCode", MyApplication.getEquId());			JSONArray jsonArray = new JSONArray();			if (list != null && list.size() > 0) {				for (VoteInfoModel model : list) {					JSONObject jsonObject = new JSONObject();					jsonObject.put("voteThemeId", model.voteThemeId);					jsonObject.put("voteOptionId", model.voteOptionId);					jsonObject.put("rybh", model.rybh);					jsonArray.put(jsonObject);				}			}			data.put("voteInfoList", jsonArray);			object.put("data", data);		} catch (JSONException e) {			e.printStackTrace();		}		return object;	}	// 查询图书信息	public JSONObject getJsonBook(String jssysdm, String page, String pageCount, String dataSources) {		JSONObject object = new JSONObject();		try {			object.put("appId", APP_ID);			object.put("token", MyApplication.getTime("yyyyMMddHHmmss") + "00");			object.put("tranId", MyApplication.getTime("yyyyMMddHHmmss") + getRandom());			object.put("keyId", "JSSYSDM");			object.put("keyValue", jssysdm);			object.put("versionCode", application.getVersionName());			JSONObject data = new JSONObject();			JSONObject pageInfo = new JSONObject();			pageInfo.put("page", page);			pageInfo.put("pageCount", pageCount);			pageInfo.put("total", "");			data.put("equCode", MyApplication.getEquId());			data.put("jssysdm", jssysdm);			data.put("pageInfo", pageInfo);			data.put("dataSources", dataSources);			object.put("data", data);		} catch (JSONException e) {			e.printStackTrace();		}		return object;	}	// 相册查询接口	public JSONObject getQryPhoto(String jssysdm, String bjdm) {		JSONObject object = new JSONObject();		try {			object.put("appId", APP_ID);			object.put("token", MyApplication.getTime("yyyyMMddHHmmss") + "00");			object.put("tranId", MyApplication.getTime("yyyyMMddHHmmss") + getRandom());			object.put("keyId", "JSSYSDM");			object.put("keyValue", jssysdm);			object.put("versionCode", application.getVersionName());			JSONObject data = new JSONObject();			data.put("equCode", MyApplication.getEquId());			data.put("bjdm", bjdm);			object.put("data", data);		} catch (JSONException e) {			e.printStackTrace();		}		return object;	}	// 自定义菜单查询	public JSONObject getJsonDiyMenu(String jssysdm) {		JSONObject object = new JSONObject();		try {			object.put("appId", APP_ID);			object.put("token", MyApplication.getTime("yyyyMMddHHmmss") + "00");			object.put("tranId", MyApplication.getTime("yyyyMMddHHmmss") + getRandom());			object.put("keyId", "JSSYSDM");			object.put("keyValue", jssysdm);			object.put("versionCode", application.getVersionName());			JSONObject data = new JSONObject();			data.put("equCode", MyApplication.getEquId());			object.put("data", data);		} catch (JSONException e) {			e.printStackTrace();		}		return object;	}	// 之星列表查询	public JSONObject getQryStar(String jssysdm, String bjdm, String page, String pageCount) {		JSONObject object = new JSONObject();		try {			object.put("appId", APP_ID);			object.put("token", MyApplication.getTime("yyyyMMddHHmmss") + "00");			object.put("tranId", MyApplication.getTime("yyyyMMddHHmmss") + getRandom());			object.put("keyId", "JSSYSDM");			object.put("keyValue", jssysdm);			object.put("versionCode", application.getVersionName());			JSONObject pageInfo = new JSONObject();			pageInfo.put("page", page);			pageInfo.put("pageCount", pageCount);			pageInfo.put("total", "");			JSONObject data = new JSONObject();			data.put("equCode", MyApplication.getEquId());			data.put("bjdm", bjdm);			data.put("pageInfo", pageInfo);			object.put("data", data);		} catch (JSONException e) {			e.printStackTrace();		}		return object;	}	// 获取课后查询问卷	public JSONObject getJsonQryQusetClass(String jssysdm, String skjhid) {		JSONObject object = new JSONObject();		try {			object.put("appId", APP_ID);			object.put("token", MyApplication.getTime("yyyyMMddHHmmss") + "00");			object.put("tranId", MyApplication.getTime("yyyyMMddHHmmss") + getRandom());			object.put("keyId", "JSSYSDM");			object.put("keyValue", jssysdm);			object.put("versionCode", application.getVersionName());			JSONObject data = new JSONObject();			data.put("equCode", MyApplication.getEquId());			data.put("skjhid", skjhid);			object.put("data", data);		} catch (JSONException e) {			e.printStackTrace();		}		return object;	}	// 课后问卷提交	public JSONObject getJsonCommitQusetClass(String jssysdm, List<AnswerModel> list) {		JSONObject object = new JSONObject();		try {			object.put("appId", APP_ID);			object.put("token", MyApplication.getTime("yyyyMMddHHmmss") + "00");			object.put("tranId", MyApplication.getTime("yyyyMMddHHmmss") + getRandom());			object.put("keyId", "JSSYSDM");			object.put("keyValue", jssysdm);			object.put("versionCode", application.getVersionName());			JSONObject data = new JSONObject();			data.put("equCode", MyApplication.getEquId());			JSONArray jsonArray = new JSONArray();			if (list != null && list.size() > 0) {				for (AnswerModel model : list) {					JSONObject jsonObject = new JSONObject();					jsonObject.put("questionCode", model.questionCode);					jsonObject.put("answer", model.answer);					jsonObject.put("replyPerson", model.replyPerson);					jsonObject.put("questionnaireCode", model.questionnaireCode);					jsonObject.put("skjhid", model.skjhid);					jsonArray.put(jsonObject);				}			}			data.put("answerInfoTypeList", jsonArray);			object.put("data", data);		} catch (JSONException e) {			e.printStackTrace();		}		return object;	}	// 查询栏目信息	public JSONObject getJsonQryLm(String page, String pageCount) {		JSONObject object = new JSONObject();		try {			object.put("appId", APP_ID);			object.put("token", MyApplication.getTime("yyyyMMddHHmmss") + "00");			object.put("tranId", MyApplication.getTime("yyyyMMddHHmmss") + getRandom());			object.put("keyId", "EquCode");			object.put("keyValue", MyApplication.getEquId());			object.put("versionCode", application.getVersionName());			JSONObject pageInfo = new JSONObject();			pageInfo.put("page", page);			pageInfo.put("pageCount", pageCount);			pageInfo.put("total", "");			JSONObject data = new JSONObject();			data.put("equCode", MyApplication.getEquId());			data.put("pageInfo", pageInfo);			object.put("data", data);		} catch (JSONException e) {			e.printStackTrace();		}		return object;	}	// 查询logo	public JSONObject getJsonQryLogo() {		JSONObject object = new JSONObject();		try {			object.put("appId", APP_ID);			object.put("token", MyApplication.getTime("yyyyMMddHHmmss") + "00");			object.put("tranId", MyApplication.getTime("yyyyMMddHHmmss") + getRandom());			object.put("keyId", "EquCode");			object.put("keyValue", MyApplication.getEquId());			object.put("versionCode", application.getVersionName());			JSONObject data = new JSONObject();			data.put("equCode", MyApplication.getEquId());			object.put("data", data);		} catch (JSONException e) {			e.printStackTrace();		}		return object;	}	// 屏保资源获取	public JSONObject getJsonQryScreensaver() {		JSONObject object = new JSONObject();		try {			object.put("appId", APP_ID);			object.put("token", MyApplication.getTime("yyyyMMddHHmmss") + "00");			object.put("tranId", MyApplication.getTime("yyyyMMddHHmmss") + getRandom());			object.put("keyId", "APPID");			object.put("keyValue", APP_ID);			object.put("versionCode", application.getVersionName());			JSONObject data = new JSONObject();			data.put("equCode", MyApplication.getEquId());			object.put("data", data);		} catch (JSONException e) {			e.printStackTrace();		}		return object;	}	// 留言对象查询	public JSONObject getJsonQryLeaveUser(String cardNo, String userType, String page, String pageCount) {		JSONObject object = new JSONObject();		try {			object.put("appId", APP_ID);			object.put("token", MyApplication.getTime("yyyyMMddHHmmss") + "00");			object.put("tranId", MyApplication.getTime("yyyyMMddHHmmss") + getRandom());			object.put("keyId", "APPID");			object.put("keyValue", APP_ID);			object.put("versionCode", application.getVersionName());			JSONObject data = new JSONObject();			data.put("equCode", MyApplication.getEquId());			data.put("cardNo", cardNo);			data.put("userType", userType);			JSONObject pageInfo = new JSONObject();			pageInfo.put("page", page);			pageInfo.put("pageCount", pageCount);			pageInfo.put("total", "");			data.put("pageInfo", pageInfo);			object.put("data", data);		} catch (JSONException e) {			e.printStackTrace();		}		return object;	}	// 家校留言提交	public JSONObject getJsonCommitLeaveMsg(LeaveMsgModel leaveMsgModel) {		JSONObject object = new JSONObject();		try {			object.put("appId", APP_ID);			object.put("token", MyApplication.getTime("yyyyMMddHHmmss") + "00");			object.put("tranId", MyApplication.getTime("yyyyMMddHHmmss") + getRandom());			object.put("keyId", "APPID");			object.put("keyValue", APP_ID);			object.put("versionCode", application.getVersionName());			JSONObject data = new JSONObject();			data.put("equCode", MyApplication.getEquId());			JSONObject leavaMsg = new JSONObject();			leavaMsg.put("kind", leaveMsgModel.kind);			leavaMsg.put("bjdm", leaveMsgModel.bjdm);			leavaMsg.put("formRyType", leaveMsgModel.formRyType);			leavaMsg.put("formRybh", leaveMsgModel.formRybh);			leavaMsg.put("formRyXm", leaveMsgModel.formRyXm);			leavaMsg.put("toRyType", leaveMsgModel.toRyType);			leavaMsg.put("toRybh", leaveMsgModel.toRybh);			leavaMsg.put("toRyXm", leaveMsgModel.toRyXm);			leavaMsg.put("msg", leaveMsgModel.msg);			leavaMsg.put("msgDate", leaveMsgModel.msgDate);			data.put("leavaMsg", leavaMsg);			object.put("data", data);		} catch (JSONException e) {			e.printStackTrace();		}		return object;	}	// 家校留言查询接口	public JSONObject getJsonQryLeaveMsg(String formRyType, String formRybh, String toRyType, String toRybh,										 String startDate, String endDate, String page, String pageCount) {		JSONObject object = new JSONObject();		try {			object.put("appId", APP_ID);			object.put("token", MyApplication.getTime("yyyyMMddHHmmss") + "00");			object.put("tranId", MyApplication.getTime("yyyyMMddHHmmss") + getRandom());			object.put("keyId", "APPID");			object.put("keyValue", APP_ID);			object.put("versionCode", application.getVersionName());			JSONObject data = new JSONObject();			data.put("equCode", MyApplication.getEquId());			data.put("formRyType", formRyType);			data.put("formRybh", formRybh);			data.put("toRyType", toRyType);			data.put("toRybh", toRybh);			data.put("startDate", startDate);			data.put("endDate", endDate);			JSONObject pageInfo = new JSONObject();			pageInfo.put("page", page);			pageInfo.put("pageCount", pageCount);			pageInfo.put("total", "");			data.put("pageInfo", pageInfo);			object.put("data", data);		} catch (JSONException e) {			e.printStackTrace();		}		return object;	}	// 请假信息查询	public JSONObject getJsonQryLeave(String leaveRybh, String page, String pageCount) {		JSONObject object = new JSONObject();		try {			object.put("appId", APP_ID);			object.put("token", MyApplication.getTime("yyyyMMddHHmmss") + "00");			object.put("tranId", MyApplication.getTime("yyyyMMddHHmmss") + getRandom());			object.put("keyId", "APPID");			object.put("keyValue", APP_ID);			object.put("versionCode", application.getVersionName());			JSONObject data = new JSONObject();			data.put("equCode", MyApplication.getEquId());			data.put("leaveRybh", leaveRybh);			JSONObject pageInfo = new JSONObject();			pageInfo.put("page", page);			pageInfo.put("pageCount", pageCount);			pageInfo.put("total", "");			data.put("pageInfo", pageInfo);			object.put("data", data);		} catch (JSONException e) {			e.printStackTrace();		}		return object;	}	// 操作请假信息	public JSONObject getJsonCommitLeave(LeaveModel leaveModel, String operateType) {		JSONObject object = new JSONObject();		try {			object.put("appId", APP_ID);			object.put("token", MyApplication.getTime("yyyyMMddHHmmss") + "00");			object.put("tranId", MyApplication.getTime("yyyyMMddHHmmss") + getRandom());			object.put("keyId", "APPID");			object.put("keyValue", APP_ID);			object.put("versionCode", application.getVersionName());			JSONObject data = new JSONObject();			data.put("equCode", MyApplication.getEquId());			JSONObject leaveInfo = new JSONObject();			leaveInfo.put("leaveId", leaveModel.leaveId);			leaveInfo.put("leaveType", leaveModel.leaveType);			leaveInfo.put("leaveInfo", leaveModel.leaveInfo);			leaveInfo.put("leaveRybh", leaveModel.leaveRybh);			leaveInfo.put("dealRybh", leaveModel.dealRybh);			leaveInfo.put("leaveStatus", leaveModel.leaveStatus);			leaveInfo.put("startDate", leaveModel.startDate);			leaveInfo.put("startTime", leaveModel.startTime);			leaveInfo.put("endDate", leaveModel.endDate);			leaveInfo.put("endTime", leaveModel.endTime);			leaveInfo.put("creatTime", leaveModel.creatTime);			leaveInfo.put("updateTime", leaveModel.updateTime);			leaveInfo.put("leaveName", leaveModel.leaveName);			leaveInfo.put("dealName", leaveModel.dealName);			leaveInfo.put("bjdm", leaveModel.bjdm);			leaveInfo.put("bjmc", leaveModel.bjmc);			leaveInfo.put("leaveTimeLength", leaveModel.leaveTimeLength);			data.put("leaveInfo", leaveInfo);			data.put("operateType", operateType);			object.put("data", data);		} catch (JSONException e) {			e.printStackTrace();		}		return object;	}	// 轮播数据获取	public JSONObject getJsonQryCarouse() {		JSONObject object = new JSONObject();		try {			object.put("appId", APP_ID);			object.put("token", MyApplication.getTime("yyyyMMddHHmmss") + "00");			object.put("tranId", MyApplication.getTime("yyyyMMddHHmmss") + getRandom());			object.put("keyId", "APPID");			object.put("keyValue", APP_ID);			object.put("versionCode", application.getVersionName());			JSONObject data = new JSONObject();			data.put("equCode", MyApplication.getEquId());			object.put("data", data);		} catch (JSONException e) {			e.printStackTrace();		}		return object;	}	// 查询机构信息	public JSONObject getJsonQryOrg() {		JSONObject object = new JSONObject();		try {			object.put("appId", APP_ID);			object.put("token", MyApplication.getTime("yyyyMMddHHmmss") + "00");			object.put("tranId", MyApplication.getTime("yyyyMMddHHmmss") + getRandom());			object.put("keyId", "APPID");			object.put("keyValue", APP_ID);			object.put("versionCode", application.getVersionName());			JSONObject data = new JSONObject();			data.put("equCode", MyApplication.getEquId());			object.put("data", data);		} catch (JSONException e) {			e.printStackTrace();		}		return object;	}	// 天气查询	public JSONObject getJsonCityWeather() {		JSONObject object = new JSONObject();		try {			object.put("appId", APP_ID);			object.put("token", MyApplication.getTime("yyyyMMddHHmmss") + "00");			object.put("tranId", MyApplication.getTime("yyyyMMddHHmmss") + getRandom());			object.put("keyId", "EQU_CODE");			object.put("keyValue", APP_ID);			object.put("versionCode", application.getVersionName());			JSONObject data = new JSONObject();			data.put("jssysdm", application.equInfoModel.jssysdm);			data.put("equCode", application.equInfoModel.equCode);			object.put("data", data);		} catch (Exception e) {			e.printStackTrace();		}		return object;	}	private String getRandom() {		String str = "";		Random random = new Random();		for (int i = 0; i < 16; i++) {			str = str + "" + random.nextInt(10);		}		return str;	}	// 查询人员考勤信息	public JSONObject getJsonStudentByKc(String skjhid, String jssysdm, String orgId) {		JSONObject object = new JSONObject();		try {			object.put("appId", APP_ID);			object.put("token", MyApplication.getTime("yyyyMMddHHmmss") + "00");			object.put("tranId", MyApplication.getTime("yyyyMMddHHmmss") + getRandom());			object.put("keyId", "EQU_CODE");			object.put("keyValue", MyApplication.getEquId());			object.put("versionCode", application.getVersionName());			//data":{"skjhid":"26","jssysdm":"110","orgId":"2"},			JSONObject data = new JSONObject();			data.put("skjhid", skjhid);			data.put("jssysdm", jssysdm);			data.put("orgId", orgId);			object.put("data", data);			Log.e("JSONObject", "getJsonStudentByKc:" + object.toString());		} catch (JSONException e) {			e.printStackTrace();		}		return object;	}	// 查询人员考勤信息	public JSONObject getJsonStudentInfoList(String jssysdm) {		JSONObject object = new JSONObject();		try {			object.put("appId", APP_ID);			object.put("token", MyApplication.getTime("yyyyMMddHHmmss") + "00");			object.put("tranId", MyApplication.getTime("yyyyMMddHHmmss") + getRandom());			object.put("keyId", "EQU_CODE");			object.put("keyValue", MyApplication.getEquId());			object.put("versionCode", application.getVersionName());			//data":{"skjhid":"26","jssysdm":"110","orgId":"2"},			JSONObject data = new JSONObject();			data.put("equCode", MyApplication.getEquId());			data.put("bjdm", jssysdm);			object.put("data", data);			Log.e("JSONObject", "JSONObject:" + object.toString());		} catch (JSONException e) {			e.printStackTrace();		}		return object;	}	// 查询人员考勤信息	public JSONObject getQryPersonnelAttendanceList3(String skjhid) {		JSONObject object = new JSONObject();		try {			object.put("appId", APP_ID);			object.put("token", MyApplication.getTime("yyyyMMddHHmmss") + "00");			object.put("tranId", MyApplication.getTime("yyyyMMddHHmmss") + getRandom());			object.put("keyId", "EQU_CODE");			object.put("keyValue", MyApplication.getEquId());			object.put("versionCode", application.getVersionName());			//data":{"skjhid":"26","jssysdm":"110","orgId":"2"},			JSONObject data = new JSONObject();			data.put("equCode", MyApplication.getEquId());			data.put("skjhId", skjhid);			object.put("data", data);			Log.e("JSONObject", "JSONObject:" + object.toString());		} catch (JSONException e) {			e.printStackTrace();		}		return object;	}}